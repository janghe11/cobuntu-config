#!/bin/sh
# Part of raspi-config http://github.com/asb/raspi-config
#
# See LICENSE file for copyright and license details


INTERACTIVE=True
ASK_TO_REBOOT=0
#BLACKLIST=/etc/modprobe.d/raspi-blacklist.conf
CONFIG=/boot/config.txt
EXEC_PATH=/usr/bin/
USEFUL_APPS='gimp vim git ttf-nanum-coding ttf-nanum' # 유용한 앱들은 여기에 추가

#
# Functions for WT
#
calc_wt_size() {
    # NOTE: it's tempting to redirect stderr to /dev/null, so supress error 
    # output from tput. However in this case, tput detects neither stdout or 
    # stderr is a tty and so only gives default 80, 24 values
    WT_HEIGHT=12
    WT_WIDTH=$(tput cols)

    if [ -z "$WT_WIDTH" ] || [ "$WT_WIDTH" -lt 80 ]; then
        WT_WIDTH=$(tput cols)
    elif [ "$WT_WIDTH" -gt 160 ]; then
        WT_WIDTH=160
    else
        WT_WIDTH=120
    fi

    WT_MENU_HEIGHT=$(($WT_HEIGHT-7))
}

intro() {
    DO=$(whiptail --title "우분투 설정 도구 (cobuntu-config)" --menu "설치 방식을 선택하여 주십시오." $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Finish --ok-button Select \
    "1 자동설정" "필요한 설정 및 프로그램을 자동으로 설치합니다. (권장)" \
    "2 선택설정" "사용자들이 필요한 설정 및 프로그램을 직접 선택합니다. (선택)" \
    3>&1 1>&2 2>&3)
    RET=$?
    if [ $RET -eq 0 ]; then
        case "$DO" in
            1\ *)
                auto_config
                finish
                ;;
            2\ *)
                return
                ;;
            *) whiptail --msgbox "Programmer error: unrecognized option" 10 60 1 ;;
        esac || whiptail --msgbox "There was an error running option $FUN" 10 60 1
    elif [ $RET -eq 1 ]; then
        exit 0
    fi
}

enter_passwd() {
    if [ $(id -u) -ne 0 ]; then
        #sudo ./cobuntu-config
        echo 이 스크립트는 루트 권한을 필요로 합니다. sudo ./cobuntu-config로 실행시켜주십시오.
        exit 1
    fi
}

finish() {
    whiptail --yesno --yes-button No --no-button Yes "변경사항을 반영하려면, 시스템을 재시작해야 합니다. 재부팅하시겠습니까?" 10 60 2
    if [ $? -eq 1 ]; then # yes
      sync
      reboot
    fi
    exit 0
}

#
# Auto Config
#
auto_config() {
    do_update
    do_local_settings
    do_locale_settings
    do_ibus_install
    do_nanumfont_install
    do_useful_apps_install
}

#
# main 함수
#
main_update() {
    do_update
}

main_korea_local_settings() {
    do_local_settings
}

main_korean_im_settings() {
    DO=$(whiptail --title "우분투 설정 도구 (cobuntu-config)" --menu "어떤 한국어 입력기를 설치하시겠습니까?" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Back --ok-button Select \
    "1 ibus 설치" "한국어 입력기인 Ibus 및 Ibus-hangul을 설치합니다.(권장)" \
    "2 nabi 설치" "한국어 입력기인 nabi을 설치합니다.(선택)" \
    "3 uim 설치" "한국어 입력기인 uim을 설치합니다.(선택)" \
    3>&1 1>&2 2>&3)
    RET=$?
    if [ $RET -eq 0 ]; then
        do_locale_settings
        case "$DO" in
            1\ *)
                do_ibus_install
                ;;
            2\ *)
                do_nabi_install
                ;;
            3\ *)
                do_uim_install
                ;;
            *) whiptail --msgbox "Programmer error: unrecognized option" 20 60 1 ;;
        esac || whiptail --msgbox "There was an error running option $FUN" 20 60 1
    fi
}

main_nanum_install() {
    do_nanumfont_install
}

main_useful_apps() {
    $(whiptail --yesno "해당 과정은 $USEFUL_APPS을 컴퓨터에 설치합니다. 진행하시겠습니까?" 10 60 1\
    3>&1 1>&2 2>&3)
    if [ $? -eq 0 ]; then
        do_update
        do_useful_apps_install
    fi
}

#
# Do 함수
#
do_update() {
    apt-get update
    apt-get -y upgrade
}

do_local_settings() {
    ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
}

do_locale_settings() {
    locale-gen ko_KR.UTF-8
    cat "assets/locale" > /etc/default/locale
}

do_ibus_install() {
    apt-get -y install ibus ibus-hangul
    cp assets/00-upstream-settings /etc/dconf/db/ibus.d/
}
do_nabi_install() {
    apt-get -y install nabi
}
do_uim_install() {
    apt-get -y install uim uim-beoyru
}

do_nanumfont_install() {
    cp assets/NanumFont/* /usr/share/fonts/TTF/
}

do_useful_apps_install() {
    apt-get -y install $USEFUL_APPS
}

#
# Command line options for non-interactive use
#
for i in $*
do
  case $i in
  --memory-split)
    OPT_MEMORY_SPLIT=GET
    printf "Not currently supported\n"
    exit 1
    ;;
  --memory-split=*)
    OPT_MEMORY_SPLIT=`echo $i | sed 's/[-a-zA-Z0-9]*=//'`
    printf "Not currently supported\n"
    exit 1
    ;;
  --expand-rootfs)
    INTERACTIVE=False
    do_expand_rootfs
    printf "Please reboot\n"
    exit 0
    ;;
  --apply-os-config)
    INTERACTIVE=False
    do_apply_os_config
    exit $?
    ;;
  *)
    # unknown option
    ;;
  esac
done

#if [ "GET" = "${OPT_MEMORY_SPLIT:-}" ]; then
#  set -u # Fail on unset variables
#  get_current_memory_split
#  echo $CURRENT_MEMSPLIT
#  exit 0
#fi

# Everything else needs to be run as root
if [ -n "${OPT_MEMORY_SPLIT:-}" ]; then
  set -e # Fail when a command errors
  set_memory_split "${OPT_MEMORY_SPLIT}"
  exit 0
fi

#
# Interactive use loop
#
calc_wt_size
enter_passwd
intro
while true; do
    FUN=$(whiptail --title "우분투 설정 도구 (cobuntu-config)" --menu "설정 메뉴" $WT_HEIGHT $WT_WIDTH $WT_MENU_HEIGHT --cancel-button Finish --ok-button Select \
    "1 우분투 최신 상태로 업데이트" "우분투를 최신 버전으로 업데이트 & 업그레이드 합니다.." \
    "2 지역 세팅" "한국 지역 관련 설정을 합니다." \
    "3 한국어 입력기 설치" "한국어 입력 관련 설정을 합니다." \
    "4 나눔고딕 폰트 설치" "나눔고딕 폰트를 설치하고 기본 서체로 지정합니다." \
    "5 유용한 도구들" "우분투 사용을 편하게 해주는 유용한 도구들을 설치합니다." \
    3>&1 1>&2 2>&3)
    RET=$?
    if [ $RET -eq 1 ]; then
        finish
    elif [ $RET -eq 0 ]; then
    case "$FUN" in
        1\ *) main_update ;;
        2\ *) main_korea_local_settings ;;
        3\ *) main_korean_im_settings ;;
        4\ *) main_nanum_install ;;
        5\ *) main_useful_apps ;;
        *) whiptail --msgbox "Programmer error: unrecognized option" 10 60 1 ;;
    esac || whiptail --msgbox "There was an error running option $FUN" 10 60 1
    else
        exit 1
    fi
done
